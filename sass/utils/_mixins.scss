@use "./variables";
@use "./maps";

//Location section inner shadow
@mixin inset-shadow {
    box-shadow: inset 0 2px 3px -1px rgba(123, 123, 123, 0.3);
}

//Material-shadow
@mixin simple-shadow {
    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
}

@mixin material-shadow {
    cursor: pointer;  
    @include simple-shadow;
    transition: all 0.3s cubic-bezier(.25,.8,.25,1);     
    &:hover {
        box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
        opacity: 0.85;
    }
}

//Button submission
@mixin btn-submit {
    padding: 0.9em 1.1em;
    border: none;
    border-radius: 1.5rem;
    background-image: variables.$linear-gradient;
    font-weight: bold;
    font-size: 0.8rem;
    color: white;
    @include material-shadow;
}

//Components

//New
@mixin new {
    &::before {
        content: "Nouveau";
        font-size: 0.9rem;
        font-weight: bold;
        padding: 0.7em;
        border-radius: 0.5rem;
        background-color: variables.$color-tertiary;
        color: darken(variables.$color-tertiary, 40%);
        position: absolute;
        right: 0;
        top: 0;
        margin: 0.9rem;
    }
}

//Like
//Source https://cssgradient.io/blog/css-gradient-text/
//property not supported officially
//in original code "background: -webkit-linear-gradient(#eee, #333);"
@mixin like {
    &:hover {
        font-weight: 900;
        color: whitesmoke;
        background: -webkit-gradient(linear, left top, left bottom, from(#9356DC), to(#FF79DA));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;

        transition-duration: 1.5s;
        }
}

//Checked
@mixin checked {
    &:hover .icon{
        transform: translateX(-6rem);
        opacity: 1;
        transition-duration: 0.8s;
        transition-timing-function: ease;
        .fa-check {
            transform: rotate(360deg);
            transition-duration: 0.5s;
        }
    }
    &:hover .menu__card-price {
        margin-right: 4rem;
        transition-duration: 0.5s;
        transition-timing-function: ease;
    }   
}

//media queries
@mixin desktop {
    @media screen and (min-width: map-get(maps.$breakpoints, desktop)) {
        @content;
    }
}

@mixin large {
    @media screen and (min-width: map-get(maps.$breakpoints,largest)) {
        @content;
    }
}